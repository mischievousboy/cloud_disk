# - Find LOG4CPPclient
# Find the native LOG4CPP includes and library
#
#  LOG4CPP_INCLUDE_DIR - where to find LOG4CPP.h, etc.
#  LOG4CPP_LIBRARIES   - List of libraries when using LOG4CPP.
#  LOG4CPP_FOUND       - True if LOG4CPP found.

IF (LOG4CPP_INCLUDE_DIR)
  # Already in cache, be silent
  SET(LOG4CPP_FIND_QUIETLY TRUE)
ENDIF (LOG4CPP_INCLUDE_DIR)

FIND_PATH(LOG4CPP_INCLUDE_DIR OstreamAppender.hh
  /usr/local/include/log4cpp
  /usr/include/log4cpp
)

SET(LOG4CPP_NAME log4cpp)
FIND_LIBRARY(LOG4CPP_LIBRARY
  NAMES ${LOG4CPP_NAME}
  PATHS /usr/lib /usr/local/lib
  PATH_SUFFIXES log4cpp
)

IF (LOG4CPP_INCLUDE_DIR AND LOG4CPP_LIBRARY)
  SET(LOG4CPP_FOUND TRUE)
  SET( LOG4CPP_LIBRARIES ${LOG4CPP_LIBRARY} )
ELSE (LOG4CPP_INCLUDE_DIR AND LOG4CPP_LIBRARY)
  SET(LOG4CPP_FOUND FALSE)
  SET( LOG4CPP_LIBRARIES )
ENDIF (LOG4CPP_INCLUDE_DIR AND LOG4CPP_LIBRARY)

if(LOG4CPP_LIBRARIES)
  get_filename_component(LOG4CPP_LIB_DIR ${LOG4CPP_LIBRARIES} PATH)
endif(LOG4CPP_LIBRARIES)

IF (LOG4CPP_FOUND)
  IF (NOT LOG4CPP_FIND_QUIETLY)
    MESSAGE(STATUS "Found LOG4CPP: ${LOG4CPP_LIBRARY}")
  ENDIF (NOT LOG4CPP_FIND_QUIETLY)
ELSE (LOG4CPP_FOUND)
  IF (LOG4CPP_FIND_REQUIRED)
    MESSAGE(STATUS "Looked for LOG4CPP libraries named ${LOG4CPP_NAME}.")
    MESSAGE(FATAL_ERROR "Could NOT find LOG4CPP library")
  ENDIF (LOG4CPP_FIND_REQUIRED)
ENDIF (LOG4CPP_FOUND)

MARK_AS_ADVANCED(
  LOG4CPP_LIBRARY
  LOG4CPP_LIB_DIR
  LOG4CPP_INCLUDE_DIR
  LOG4CPP_NAME
  )
